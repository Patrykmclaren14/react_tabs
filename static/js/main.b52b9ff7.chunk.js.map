{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","title","map","onClick","handleTabClick","href","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAA4B,SAAC,GAEpC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAMvE,OACE,qCACE,oBAAIO,UAAU,QAAd,mCAA0CJ,EAAYK,SACtD,sBAAK,UAAQ,gBAAb,UACE,qBAAKD,UAAU,gBAAf,SACE,6BACGP,EAAKS,KAAI,SAAAJ,GAAG,OAEX,aADA,CACA,MAEE,UAAQ,MACRK,QAAS,kBAfA,SAACL,GACtBH,EAAcG,GAcaM,CAAeN,IAC9BE,UAAS,UAAKJ,IAAgBE,GAAO,aAJvC,SAME,mBAAGO,KAAI,WAAMP,EAAIC,IAAM,UAAQ,UAA/B,SACGD,EAAIG,SANFH,EAAIC,WAajB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,iBCvCVb,EAAO,CAClB,CAAEM,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,gBAS7BC,EAAgB,WAC3B,MAA0CC,mBAAiBf,EAAK,GAAGM,IAAnE,mBAAOL,EAAP,KAAsBe,EAAtB,KAMA,OACE,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CACEP,KAAMA,EACNC,cAAeA,EACfC,cAToB,SAACG,GACzBW,EAAiBX,EAAIC,UCpBzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b52b9ff7.chunk.js","sourcesContent":["import React from 'react';\n\ninterface TabsProps {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n}\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const Tabs: React.FC<TabsProps> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleTabClick = (tab: Tab) => {\n    onTabSelected(tab);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">{`Selected tab is ${selectedTab.title}`}</h1>\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              // eslint-disable-next-line\n              <li\n                key={tab.id}\n                data-cy=\"Tab\"\n                onClick={() => handleTabClick(tab)}\n                className={`${selectedTab === tab && 'is-active'}`}\n              >\n                <a href={`#${tab.id}`} data-cy=\"TabLink\">\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState<string>(tabs[0].id);\n\n  const handleTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}